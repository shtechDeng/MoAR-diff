INFO - main.py - 2025-02-26 16:21:00,400 - Using device: cuda
INFO - main.py - 2025-02-26 16:21:00,463 - Writing log file to exp/logs/doc
INFO - main.py - 2025-02-26 16:21:00,464 - Exp instance id = 41875
INFO - main.py - 2025-02-26 16:21:00,464 - Exp comment = 
INFO - diffusion.py - 2025-02-26 16:21:06,346 - tensor([[[[[0.9805]]]]], device='cuda:0')
INFO - diffusion.py - 2025-02-26 16:21:06,348 - tensor([100], device='cuda:0')
INFO - diffusion.py - 2025-02-26 16:21:06,971 - 运行到：
INFO - diffusion.py - 2025-02-26 16:21:06,971 - 0
INFO - diffusion.py - 2025-02-26 16:21:06,971 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:21:15,066 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:15,067 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:17,560 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:17,561 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:20,052 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:20,053 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:22,550 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:22,550 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:25,055 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:25,056 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:27,555 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:27,555 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:30,044 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:30,045 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:32,540 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:32,540 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:35,041 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:35,042 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:37,537 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:37,537 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:40,031 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:40,032 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:42,525 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:42,525 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:45,026 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:45,027 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:47,533 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:47,533 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:50,029 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:50,029 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:52,527 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:52,527 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:55,023 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:55,024 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:57,529 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:57,530 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:59,997 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:21:59,997 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:02,472 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:02,472 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:04,949 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:04,950 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:07,423 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:07,424 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:09,899 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:09,899 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:12,375 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:12,375 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:14,853 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:14,854 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:17,325 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:17,325 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:19,803 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:19,804 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:22,280 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:22,281 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:24,756 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:24,756 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:27,230 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:27,230 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:29,701 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:29,702 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:32,178 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:32,179 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:34,657 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:34,657 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:37,135 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:37,135 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:39,599 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:39,601 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:42,083 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:42,083 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:44,571 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:44,572 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:47,056 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:47,057 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:49,526 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:49,527 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:52,005 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:52,006 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:54,483 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:54,484 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:56,959 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:56,959 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:59,429 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:22:59,430 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:01,904 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:01,904 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:04,374 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:04,375 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:06,849 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:06,850 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:09,320 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:09,321 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:11,791 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:11,792 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:14,267 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:14,268 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:16,744 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:16,745 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:19,217 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:19,218 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:21,689 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:21,689 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:24,161 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:24,162 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:26,635 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:26,635 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:29,109 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:29,110 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:31,584 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:31,584 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:34,057 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:34,057 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:36,528 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:36,529 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:39,003 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:39,004 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:41,472 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:41,472 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:43,946 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:43,947 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:46,417 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:46,418 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:48,892 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:48,893 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:51,376 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:51,377 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:53,856 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:53,857 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:23:53,898 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:23:53,898 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/0101010044/66
INFO - diffusion.py - 2025-02-26 16:23:55,589 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:23:56,352 - 运行到：
INFO - diffusion.py - 2025-02-26 16:23:56,352 - 1
INFO - diffusion.py - 2025-02-26 16:23:56,352 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:23:58,668 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:23:58,669 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:01,156 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:01,156 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:03,637 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:03,637 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:06,116 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:06,117 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:08,597 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:08,597 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:11,070 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:11,070 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:13,550 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:13,551 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:16,037 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:16,037 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:18,529 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:18,529 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:21,024 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:21,025 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:23,523 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:23,523 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:26,010 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:26,010 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:28,508 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:28,508 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:31,174 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:31,174 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:33,848 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:33,849 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:36,482 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:36,482 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:39,001 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:39,002 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:41,491 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:41,491 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:43,969 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:43,969 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:46,450 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:46,450 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:48,924 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:48,925 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:51,409 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:51,409 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:53,889 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:53,890 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:56,396 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:56,396 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:58,900 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:24:58,901 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:01,405 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:01,405 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:03,911 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:03,912 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:06,416 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:06,417 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:08,926 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:08,927 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:11,429 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:11,429 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:13,925 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:13,926 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:16,429 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:16,429 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:18,934 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:18,935 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:21,443 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:21,444 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:23,944 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:23,945 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:26,449 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:26,449 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:28,949 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:28,950 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:31,450 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:31,450 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:33,960 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:33,961 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:36,470 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:36,471 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:38,969 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:38,970 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:41,471 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:41,472 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:43,978 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:43,979 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:46,487 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:46,487 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:48,989 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:48,990 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:51,482 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:51,483 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:53,986 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:53,987 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:56,489 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:56,489 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:58,993 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:25:58,994 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:01,502 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:01,502 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:03,994 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:03,995 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:06,489 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:06,489 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:08,985 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:08,986 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:11,492 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:11,492 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:13,996 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:13,997 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:16,492 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:16,492 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:18,996 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:18,997 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:21,503 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:21,503 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:24,013 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:24,014 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:26,510 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:26,510 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:29,004 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:29,005 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:31,506 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:31,507 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:34,014 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:34,015 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:36,515 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:36,516 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:39,016 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:39,017 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:26:39,056 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:26:39,056 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/0101010053/31
INFO - diffusion.py - 2025-02-26 16:26:40,792 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:26:41,524 - 运行到：
INFO - diffusion.py - 2025-02-26 16:26:41,524 - 2
INFO - diffusion.py - 2025-02-26 16:26:41,524 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:26:43,871 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:43,872 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:46,371 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:46,372 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:48,864 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:48,865 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:51,365 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:51,365 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:53,867 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:53,867 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:56,369 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:56,369 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:58,865 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:26:58,866 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:01,367 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:01,367 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:03,865 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:03,866 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:06,374 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:06,375 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:08,878 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:08,878 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:11,376 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:11,377 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:13,873 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:13,873 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:16,373 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:16,374 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:18,881 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:18,881 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:21,383 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:21,383 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:23,884 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:23,884 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:26,387 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:26,387 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:28,885 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:28,886 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:31,388 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:31,389 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:33,882 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:33,883 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:36,381 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:36,381 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:38,883 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:38,883 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:41,392 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:41,393 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:43,892 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:43,892 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:46,390 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:46,390 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:48,883 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:48,883 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:51,385 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:51,386 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:53,898 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:53,898 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:56,394 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:56,395 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:58,889 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:27:58,889 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:01,396 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:01,396 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:03,904 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:03,904 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:06,407 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:06,408 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:08,912 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:08,913 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:11,412 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:11,412 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:13,913 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:13,913 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:16,421 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:16,421 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:18,921 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:18,921 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:21,423 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:21,423 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:23,922 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:23,922 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:26,428 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:26,428 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:28,935 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:28,936 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:31,432 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:31,432 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:33,927 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:33,928 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:36,427 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:36,427 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:38,937 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:38,937 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:41,441 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:41,442 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:43,945 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:43,945 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:46,446 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:46,446 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:48,942 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:48,942 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:51,440 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:51,440 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:53,940 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:53,941 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:56,431 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:56,431 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:58,895 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:28:58,895 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:01,394 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:01,394 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:03,886 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:03,887 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:06,377 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:06,377 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:08,878 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:08,879 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:11,372 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:11,372 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:13,880 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:13,880 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:16,375 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:16,375 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:18,876 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:18,876 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:21,377 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:21,378 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:23,870 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:23,871 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:29:23,910 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:29:23,910 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/0101010067/71
INFO - diffusion.py - 2025-02-26 16:29:25,607 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:29:26,519 - 运行到：
INFO - diffusion.py - 2025-02-26 16:29:26,520 - 3
INFO - diffusion.py - 2025-02-26 16:29:26,520 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:29:28,856 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:28,856 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:31,366 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:31,367 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:33,871 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:33,872 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:36,375 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:36,375 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:38,881 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:38,881 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:41,385 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:41,386 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:43,889 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:43,890 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:46,388 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:46,389 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:48,894 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:48,895 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:51,401 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:51,402 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:53,915 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:53,915 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:56,423 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:56,423 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:58,921 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:29:58,921 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:01,428 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:01,428 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:03,927 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:03,927 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:06,443 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:06,443 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:08,954 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:08,954 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:11,459 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:11,460 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:13,962 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:13,962 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:16,469 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:16,469 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:18,975 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:18,975 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:21,477 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:21,478 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:23,982 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:23,982 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:26,489 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:26,489 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:29,000 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:29,001 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:31,506 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:31,507 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:34,005 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:34,005 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:36,508 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:36,508 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:39,016 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:39,016 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:41,526 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:41,526 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:44,034 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:44,035 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:46,547 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:46,547 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:49,052 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:49,052 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:51,562 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:51,562 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:54,076 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:54,076 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:56,578 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:56,578 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:59,080 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:30:59,080 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:01,590 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:01,591 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:04,105 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:04,106 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:06,613 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:06,613 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:09,110 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:09,110 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:11,614 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:11,614 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:14,115 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:14,115 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:16,621 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:16,621 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:19,127 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:19,128 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:21,630 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:21,630 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:24,141 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:24,141 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:26,650 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:26,650 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:29,160 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:29,161 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:31,667 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:31,668 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:34,167 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:34,167 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:36,666 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:36,667 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:39,176 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:39,177 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:41,693 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:41,693 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:44,196 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:44,197 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:46,703 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:46,703 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:49,201 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:49,201 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:51,716 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:51,717 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:54,220 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:54,220 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:56,712 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:56,712 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:59,207 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:31:59,207 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:01,717 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:01,717 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:04,221 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:04,221 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:06,719 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:06,720 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:09,229 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:09,229 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:32:09,269 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:32:09,269 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/0101010070/42
INFO - diffusion.py - 2025-02-26 16:32:10,954 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:32:11,851 - 运行到：
INFO - diffusion.py - 2025-02-26 16:32:11,852 - 4
INFO - diffusion.py - 2025-02-26 16:32:11,852 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:32:14,201 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:14,201 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:16,698 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:16,699 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:19,199 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:19,200 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:21,700 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:21,701 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:24,209 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:24,210 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:26,715 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:26,715 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:29,215 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:29,216 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:31,717 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:31,717 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:34,216 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:34,216 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:36,719 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:36,719 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:39,218 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:39,218 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:41,720 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:41,720 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:44,219 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:44,219 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:46,725 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:46,726 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:49,232 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:49,233 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:51,745 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:51,745 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:54,252 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:54,253 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:56,766 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:56,766 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:59,271 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:32:59,272 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:01,777 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:01,777 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:04,258 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:04,258 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:06,759 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:06,759 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:09,263 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:09,263 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:11,765 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:11,765 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:14,265 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:14,266 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:16,762 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:16,763 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:19,266 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:19,266 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:21,768 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:21,768 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:24,270 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:24,271 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:26,770 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:26,770 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:29,274 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:29,274 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:31,786 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:31,786 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:34,287 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:34,288 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:36,789 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:36,789 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:39,302 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:39,302 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:41,814 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:41,814 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:44,323 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:44,323 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:46,823 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:46,824 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:49,332 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:49,333 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:51,836 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:51,836 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:54,340 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:54,341 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:56,838 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:56,839 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:59,338 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:33:59,338 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:01,840 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:01,841 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:04,343 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:04,343 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:06,844 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:06,844 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:09,335 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:09,336 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:11,830 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:11,831 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:14,337 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:14,337 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:16,844 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:16,844 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:19,334 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:19,334 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:21,826 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:21,827 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:24,320 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:24,321 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:26,825 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:26,826 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:29,322 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:29,322 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:31,812 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:31,813 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:34,318 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:34,318 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:36,821 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:36,821 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:39,330 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:39,330 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:41,825 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:41,825 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:44,312 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:44,312 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:46,803 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:46,804 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:49,305 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:49,305 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:51,810 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:51,810 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:54,300 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:54,301 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:34:54,340 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:34:54,340 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N131_0301010065/60
INFO - diffusion.py - 2025-02-26 16:34:56,031 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:34:56,691 - 运行到：
INFO - diffusion.py - 2025-02-26 16:34:56,691 - 5
INFO - diffusion.py - 2025-02-26 16:34:56,691 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:34:59,042 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:34:59,042 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:01,556 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:01,557 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:04,063 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:04,063 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:06,577 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:06,577 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:09,101 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:09,102 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:11,621 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:11,621 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:14,129 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:14,129 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:16,642 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:16,642 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:19,153 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:19,153 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:21,678 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:21,679 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:24,194 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:24,194 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:26,701 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:26,702 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:29,205 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:29,205 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:31,718 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:31,719 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:34,240 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:34,240 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:36,750 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:36,751 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:39,271 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:39,271 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:41,789 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:41,790 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:44,301 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:44,302 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:46,820 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:46,820 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:49,332 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:49,333 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:51,848 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:51,848 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:54,364 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:54,364 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:56,889 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:56,889 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:59,405 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:35:59,405 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:01,920 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:01,920 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:04,430 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:04,431 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:06,947 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:06,947 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:09,465 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:09,465 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:11,986 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:11,987 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:14,494 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:14,495 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:17,006 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:17,006 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:19,522 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:19,523 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:22,038 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:22,038 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:24,557 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:24,557 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:27,067 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:27,067 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:29,580 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:29,580 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:32,094 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:32,095 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:34,615 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:34,616 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:37,133 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:37,134 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:39,643 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:39,644 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:42,159 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:42,159 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:44,668 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:44,669 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:47,185 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:47,186 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:49,694 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:49,694 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:52,210 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:52,210 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:54,723 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:54,724 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:57,242 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:57,243 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:59,761 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:36:59,761 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:02,283 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:02,283 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:04,799 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:04,799 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:07,305 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:07,305 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:09,802 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:09,802 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:12,306 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:12,306 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:14,812 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:14,812 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:17,323 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:17,323 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:19,835 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:19,836 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:22,342 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:22,342 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:24,854 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:24,854 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:27,361 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:27,361 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:29,868 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:29,868 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:32,382 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:32,383 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:34,893 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:34,893 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:37,394 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:37,395 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:39,907 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:39,907 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:37:39,947 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:37:39,947 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N218_0302010132/10
INFO - diffusion.py - 2025-02-26 16:37:41,624 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:37:42,265 - 运行到：
INFO - diffusion.py - 2025-02-26 16:37:42,265 - 6
INFO - diffusion.py - 2025-02-26 16:37:42,265 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:37:44,616 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:44,616 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:47,136 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:47,136 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:49,653 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:49,654 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:52,173 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:52,173 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:54,695 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:54,695 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:57,216 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:57,216 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:59,741 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:37:59,742 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:02,267 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:02,268 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:04,793 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:04,793 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:07,315 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:07,315 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:09,838 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:09,838 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:12,361 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:12,362 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:14,882 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:14,882 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:17,410 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:17,410 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:19,933 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:19,933 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:22,455 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:22,455 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:24,977 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:24,978 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:27,505 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:27,505 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:30,035 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:30,035 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:32,559 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:32,559 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:35,081 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:35,082 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:37,605 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:37,605 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:40,121 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:40,122 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:42,650 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:42,650 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:45,166 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:45,166 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:47,680 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:47,680 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:50,202 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:50,203 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:52,727 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:52,728 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:55,265 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:55,266 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:57,793 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:38:57,793 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:00,311 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:00,312 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:02,833 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:02,833 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:05,362 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:05,363 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:07,897 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:07,898 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:10,428 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:10,429 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:12,953 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:12,953 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:15,473 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:15,474 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:17,996 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:17,996 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:20,524 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:20,525 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:23,055 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:23,056 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:25,572 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:25,573 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:28,089 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:28,090 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:30,611 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:30,612 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:33,137 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:33,137 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:35,662 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:35,663 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:38,181 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:38,181 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:40,700 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:40,701 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:43,227 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:43,227 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:45,763 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:45,763 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:48,289 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:48,289 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:50,805 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:50,806 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:53,319 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:53,319 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:55,834 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:55,835 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:58,358 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:39:58,359 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:00,874 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:00,874 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:03,388 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:03,388 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:05,908 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:05,908 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:08,424 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:08,425 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:10,950 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:10,951 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:13,468 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:13,469 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:15,991 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:15,992 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:18,507 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:18,508 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:21,026 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:21,026 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:23,551 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:23,551 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:26,067 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:26,068 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:40:26,107 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:40:26,107 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N271_0302010167/0
INFO - diffusion.py - 2025-02-26 16:40:27,793 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:40:28,527 - 运行到：
INFO - diffusion.py - 2025-02-26 16:40:28,528 - 7
INFO - diffusion.py - 2025-02-26 16:40:28,528 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:40:30,876 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:30,876 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:33,400 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:33,400 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:35,920 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:35,920 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:38,442 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:38,443 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:40,965 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:40,965 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:43,486 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:43,486 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:46,008 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:46,008 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:48,531 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:48,532 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:51,050 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:51,050 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:53,566 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:53,566 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:56,095 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:56,096 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:58,618 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:40:58,619 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:01,141 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:01,142 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:03,670 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:03,671 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:06,201 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:06,202 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:08,734 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:08,735 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:11,267 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:11,268 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:13,801 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:13,801 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:16,295 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:16,296 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:18,808 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:18,808 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:21,332 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:21,333 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:23,862 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:23,862 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:26,391 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:26,392 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:28,915 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:28,916 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:31,433 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:31,433 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:33,954 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:33,954 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:36,473 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:36,474 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:39,001 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:39,002 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:41,533 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:41,534 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:44,060 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:44,061 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:46,584 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:46,585 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:49,108 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:49,108 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:51,633 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:51,634 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:54,169 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:54,169 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:56,701 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:56,702 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:59,227 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:41:59,228 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:01,759 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:01,760 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:04,281 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:04,282 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:06,811 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:06,812 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:09,335 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:09,335 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:11,853 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:11,853 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:14,372 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:14,373 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:16,888 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:16,889 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:19,418 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:19,419 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:21,945 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:21,946 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:24,474 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:24,474 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:26,999 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:27,000 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:29,523 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:29,524 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:32,056 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:32,056 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:34,571 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:34,572 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:37,084 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:37,085 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:39,607 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:39,608 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:42,123 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:42,124 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:44,651 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:44,651 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:47,177 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:47,178 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:49,691 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:49,691 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:52,211 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:52,212 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:54,731 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:54,732 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:57,258 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:57,259 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:59,777 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:42:59,777 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:02,298 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:02,299 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:04,812 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:04,813 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:07,331 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:07,332 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:09,857 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:09,857 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:12,374 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:12,374 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:43:12,415 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:43:12,415 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N324_0302010208/1
INFO - diffusion.py - 2025-02-26 16:43:14,106 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:43:14,820 - 运行到：
INFO - diffusion.py - 2025-02-26 16:43:14,820 - 8
INFO - diffusion.py - 2025-02-26 16:43:14,820 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:43:17,169 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:17,170 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:19,671 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:19,671 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:22,169 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:22,170 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:24,673 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:24,674 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:27,175 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:27,176 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:29,679 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:29,680 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:32,176 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:32,176 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:34,671 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:34,671 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:37,170 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:37,171 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:39,676 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:39,676 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:42,178 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:42,179 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:44,683 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:44,683 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:47,178 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:47,179 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:49,679 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:49,679 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:52,188 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:52,189 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:54,690 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:54,690 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:57,192 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:57,193 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:59,698 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:43:59,699 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:02,211 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:02,212 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:04,719 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:04,719 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:07,215 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:07,216 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:09,717 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:09,718 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:12,221 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:12,222 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:14,728 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:14,728 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:17,224 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:17,224 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:19,726 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:19,727 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:22,222 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:22,223 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:24,728 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:24,729 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:27,233 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:27,234 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:29,736 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:29,736 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:32,241 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:32,242 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:34,748 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:34,749 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:37,257 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:37,258 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:39,761 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:39,761 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:42,268 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:42,269 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:44,767 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:44,767 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:47,276 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:47,277 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:49,775 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:49,776 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:52,278 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:52,279 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:54,775 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:54,775 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:57,274 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:57,275 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:59,775 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:44:59,775 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:02,267 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:02,268 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:04,776 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:04,776 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:07,273 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:07,274 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:09,772 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:09,772 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:12,275 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:12,276 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:14,784 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:14,784 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:17,286 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:17,286 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:19,789 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:19,789 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:22,269 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:22,270 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:24,751 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:24,751 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:27,252 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:27,253 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:29,756 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:29,756 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:32,253 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:32,254 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:34,748 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:34,749 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:37,242 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:37,243 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:39,744 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:39,744 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:42,241 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:42,242 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:44,742 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:44,743 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:47,232 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:47,233 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:49,731 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:49,731 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:52,230 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:52,231 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:54,734 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:54,734 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:57,222 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:45:57,223 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:45:57,264 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:45:57,264 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/0101010005/50
INFO - diffusion.py - 2025-02-26 16:45:58,950 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:45:59,623 - 运行到：
INFO - diffusion.py - 2025-02-26 16:45:59,623 - 9
INFO - diffusion.py - 2025-02-26 16:45:59,623 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:46:01,972 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:01,973 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:04,479 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:04,480 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:06,974 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:06,974 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:09,482 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:09,483 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:11,985 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:11,985 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:14,490 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:14,490 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:16,999 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:16,999 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:19,503 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:19,503 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:22,011 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:22,012 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:24,508 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:24,509 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:27,008 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:27,009 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:29,514 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:29,514 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:32,021 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:32,021 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:34,532 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:34,532 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:37,036 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:37,037 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:39,544 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:39,544 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:42,057 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:42,058 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:44,574 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:44,575 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:47,074 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:47,075 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:49,576 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:49,577 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:52,087 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:52,087 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:54,597 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:54,597 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:57,102 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:57,103 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:59,606 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:46:59,606 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:02,111 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:02,112 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:04,611 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:04,612 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:07,124 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:07,125 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:09,624 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:09,624 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:12,135 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:12,136 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:14,639 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:14,640 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:17,151 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:17,152 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:19,657 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:19,658 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:22,156 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:22,156 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:24,658 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:24,658 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:27,165 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:27,166 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:29,677 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:29,678 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:32,183 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:32,184 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:34,689 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:34,689 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:37,203 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:37,204 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:39,711 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:39,711 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:42,218 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:42,219 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:44,713 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:44,713 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:47,217 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:47,218 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:49,722 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:49,722 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:52,236 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:52,237 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:54,741 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:54,741 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:57,245 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:57,246 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:59,745 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:47:59,746 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:02,249 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:02,249 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:04,761 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:04,761 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:07,262 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:07,263 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:09,772 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:09,773 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:12,270 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:12,271 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:14,783 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:14,783 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:17,285 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:17,286 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:19,784 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:19,785 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:22,283 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:22,284 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:24,783 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:24,784 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:27,291 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:27,291 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:29,787 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:29,787 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:32,280 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:32,281 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:34,773 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:34,774 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:37,280 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:37,281 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:39,785 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:39,786 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:42,291 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:42,292 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:48:42,332 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:48:42,332 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N139_0301010068/21
INFO - diffusion.py - 2025-02-26 16:48:44,015 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:48:44,641 - 运行到：
INFO - diffusion.py - 2025-02-26 16:48:44,641 - 10
INFO - diffusion.py - 2025-02-26 16:48:44,642 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:48:46,989 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:46,990 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:49,513 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:49,513 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:52,030 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:52,030 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:54,540 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:54,540 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:57,056 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:57,057 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:59,562 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:48:59,562 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:02,073 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:02,074 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:04,587 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:04,588 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:07,106 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:07,106 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:09,624 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:09,624 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:12,140 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:12,141 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:14,656 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:14,656 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:17,169 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:17,170 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:19,690 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:19,690 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:22,213 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:22,214 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:24,731 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:24,731 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:27,236 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:27,237 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:29,732 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:29,732 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:32,242 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:32,243 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:34,763 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:34,763 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:37,274 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:37,275 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:39,785 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:39,786 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:42,302 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:42,303 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:44,819 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:44,819 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:47,342 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:47,343 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:49,858 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:49,859 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:52,366 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:52,366 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:54,880 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:54,880 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:57,401 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:57,402 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:59,925 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:49:59,925 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:02,442 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:02,443 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:04,958 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:04,959 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:07,472 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:07,473 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:09,984 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:09,984 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:12,504 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:12,505 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:15,024 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:15,024 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:17,540 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:17,541 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:20,060 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:20,060 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:22,576 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:22,576 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:25,101 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:25,101 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:27,608 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:27,609 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:30,117 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:30,118 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:32,635 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:32,636 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:35,152 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:35,153 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:37,669 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:37,670 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:40,178 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:40,178 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:42,685 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:42,687 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:45,208 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:45,208 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:47,732 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:47,733 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:50,243 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:50,243 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:52,748 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:52,749 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:55,257 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:55,258 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:57,770 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:50:57,771 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:00,295 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:00,296 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:02,812 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:02,813 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:05,321 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:05,322 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:07,832 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:07,833 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:10,344 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:10,345 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:12,861 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:12,861 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:15,367 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:15,367 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:17,869 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:17,870 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:20,376 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:20,377 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:22,891 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:22,892 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:25,407 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:25,407 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:27,913 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:27,914 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:51:27,954 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:51:27,954 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N156_0302020031/5
INFO - diffusion.py - 2025-02-26 16:51:29,634 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:51:30,325 - 运行到：
INFO - diffusion.py - 2025-02-26 16:51:30,325 - 11
INFO - diffusion.py - 2025-02-26 16:51:30,325 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:51:32,675 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:32,676 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:35,179 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:35,179 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:37,675 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:37,675 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:40,175 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:40,176 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:42,687 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:42,688 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:45,187 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:45,188 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:47,693 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:47,693 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:50,199 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:50,199 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:52,704 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:52,706 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:55,213 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:55,214 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:57,714 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:51:57,715 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:00,221 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:00,222 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:02,730 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:02,731 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:05,246 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:05,247 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:07,749 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:07,750 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:10,251 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:10,252 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:12,757 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:12,758 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:15,265 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:15,265 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:17,774 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:17,775 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:20,282 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:20,282 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:22,779 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:22,780 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:25,281 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:25,281 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:27,792 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:27,793 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:30,299 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:30,300 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:32,792 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:32,792 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:35,296 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:35,297 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:37,801 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:37,802 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:40,309 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:40,310 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:42,807 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:42,808 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:45,312 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:45,312 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:47,815 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:47,816 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:50,329 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:50,329 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:52,834 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:52,835 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:55,347 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:55,347 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:57,852 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:52:57,853 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:00,359 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:00,359 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:02,864 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:02,865 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:05,366 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:05,366 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:07,867 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:07,868 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:10,372 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:10,372 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:12,885 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:12,886 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:15,385 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:15,385 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:17,893 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:17,894 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:20,401 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:20,402 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:22,910 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:22,911 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:25,423 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:25,423 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:27,927 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:27,928 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:30,438 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:30,438 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:32,946 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:32,947 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:35,433 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:35,433 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:37,923 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:37,924 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:40,423 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:40,423 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:42,934 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:42,935 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:45,444 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:45,444 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:47,939 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:47,940 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:50,445 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:50,445 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:52,949 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:52,949 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:55,458 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:55,458 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:57,962 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:53:57,963 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:00,452 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:00,452 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:02,956 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:02,956 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:05,458 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:05,459 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:07,957 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:07,958 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:10,450 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:10,450 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:12,945 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:12,946 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:54:12,986 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:54:12,986 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N170_0301010077/48
INFO - diffusion.py - 2025-02-26 16:54:14,672 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:54:15,235 - 运行到：
INFO - diffusion.py - 2025-02-26 16:54:15,235 - 12
INFO - diffusion.py - 2025-02-26 16:54:15,235 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:54:17,582 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:17,583 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:20,110 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:20,110 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:22,631 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:22,631 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:25,151 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:25,152 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:27,665 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:27,665 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:30,178 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:30,178 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:32,699 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:32,699 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:35,227 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:35,227 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:37,749 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:37,750 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:40,266 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:40,267 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:42,787 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:42,787 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:45,314 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:45,314 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:47,843 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:47,844 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:50,366 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:50,367 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:52,886 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:52,887 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:55,407 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:55,408 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:57,933 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:54:57,934 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:00,468 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:00,469 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:02,996 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:02,997 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:05,522 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:05,523 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:08,047 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:08,048 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:10,572 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:10,572 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:13,104 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:13,105 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:15,631 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:15,631 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:18,152 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:18,152 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:20,674 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:20,674 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:23,195 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:23,196 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:25,732 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:25,733 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:28,261 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:28,262 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:30,783 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:30,784 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:33,305 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:33,307 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:35,834 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:35,834 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:38,370 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:38,371 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:40,901 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:40,901 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:43,422 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:43,423 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:45,949 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:45,949 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:48,471 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:48,472 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:51,005 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:51,005 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:53,530 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:53,530 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:56,052 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:56,053 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:58,571 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:55:58,572 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:01,094 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:01,094 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:03,624 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:03,626 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:06,150 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:06,150 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:08,670 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:08,671 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:11,189 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:11,189 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:13,708 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:13,708 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:16,244 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:16,244 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:18,764 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:18,764 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:21,284 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:21,285 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:23,802 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:23,803 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:26,328 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:26,328 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:28,861 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:28,862 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:31,387 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:31,388 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:33,905 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:33,905 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:36,420 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:36,420 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:38,938 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:38,938 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:41,469 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:41,469 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:43,992 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:43,993 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:46,504 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:46,504 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:49,030 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:49,030 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:51,541 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:51,542 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:54,072 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:54,073 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:56,590 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:56,590 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:59,102 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:56:59,102 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:56:59,141 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:56:59,141 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N207_0302010123/0
INFO - diffusion.py - 2025-02-26 16:57:00,859 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:57:01,431 - 运行到：
INFO - diffusion.py - 2025-02-26 16:57:01,431 - 13
INFO - diffusion.py - 2025-02-26 16:57:01,431 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:57:03,780 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:03,781 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:06,303 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:06,304 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:08,830 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:08,831 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:11,355 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:11,355 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:13,885 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:13,885 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:16,401 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:16,402 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:18,926 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:18,926 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:21,451 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:21,451 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:23,983 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:23,984 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:26,507 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:26,507 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:29,037 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:29,037 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:31,568 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:31,569 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:34,091 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:34,091 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:36,611 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:36,611 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:39,138 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:39,138 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:41,645 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:41,645 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:44,150 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:44,150 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:46,673 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:46,674 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:49,198 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:49,199 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:51,725 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:51,725 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:54,258 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:54,258 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:56,779 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:56,779 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:59,300 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:57:59,300 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:01,830 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:01,830 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:04,353 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:04,354 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:06,882 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:06,883 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:09,409 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:09,409 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:11,933 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:11,933 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:14,452 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:14,452 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:16,972 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:16,972 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:19,500 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:19,501 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:22,024 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:22,025 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:24,550 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:24,551 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:27,076 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:27,077 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:29,604 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:29,604 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:32,130 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:32,131 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:34,660 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:34,661 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:37,185 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:37,186 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:39,711 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:39,712 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:42,231 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:42,232 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:44,757 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:44,757 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:47,281 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:47,282 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:49,803 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:49,803 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:52,325 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:52,326 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:54,849 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:54,850 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:57,371 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:57,372 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:59,890 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:58:59,890 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:02,417 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:02,417 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:04,935 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:04,935 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:07,452 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:07,453 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:10,062 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:10,062 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:12,581 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:12,581 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:15,101 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:15,102 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:17,618 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:17,619 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:20,137 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:20,137 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:22,658 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:22,658 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:25,173 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:25,173 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:27,695 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:27,695 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:30,213 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:30,214 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:32,738 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:32,738 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:35,253 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:35,253 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:37,764 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:37,764 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:40,288 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:40,288 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:42,801 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:42,801 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:45,321 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:45,321 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:59:45,362 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 16:59:45,362 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N225_0302010137/1
INFO - diffusion.py - 2025-02-26 16:59:47,059 - 结果已输出
INFO - diffusion.py - 2025-02-26 16:59:47,600 - 运行到：
INFO - diffusion.py - 2025-02-26 16:59:47,600 - 14
INFO - diffusion.py - 2025-02-26 16:59:47,600 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 16:59:49,951 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:49,952 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:52,479 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:52,480 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:54,999 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:55,000 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:57,519 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 16:59:57,520 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:00,035 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:00,037 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:02,566 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:02,566 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:05,089 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:05,089 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:07,604 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:07,604 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:10,122 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:10,122 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:12,641 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:12,642 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:15,172 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:15,172 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:17,698 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:17,698 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:20,220 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:20,221 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:22,746 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:22,747 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:25,275 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:25,275 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:27,804 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:27,804 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:30,336 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:30,336 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:32,856 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:32,857 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:35,383 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:35,384 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:37,910 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:37,910 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:40,439 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:40,440 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:42,959 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:42,960 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:45,486 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:45,486 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:48,013 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:48,013 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:50,551 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:50,552 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:53,086 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:53,087 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:55,619 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:55,620 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:58,135 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:00:58,135 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:00,662 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:00,663 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:03,201 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:03,202 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:05,723 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:05,724 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:08,241 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:08,241 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:10,770 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:10,771 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:13,300 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:13,300 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:15,838 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:15,839 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:18,367 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:18,367 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:20,894 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:20,895 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:23,420 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:23,420 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:25,944 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:25,944 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:28,471 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:28,471 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:30,998 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:30,999 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:33,525 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:33,525 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:36,053 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:36,054 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:38,582 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:38,582 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:41,113 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:41,114 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:43,634 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:43,635 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:46,163 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:46,163 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:48,676 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:48,677 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:51,167 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:51,168 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:53,686 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:53,687 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:56,206 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:56,206 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:58,727 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:01:58,728 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:01,249 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:01,249 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:03,773 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:03,774 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:06,282 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:06,282 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:08,799 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:08,800 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:11,321 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:11,322 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:13,849 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:13,849 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:16,365 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:16,366 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:18,883 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:18,884 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:21,392 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:21,393 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:23,914 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:23,914 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:26,435 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:26,436 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:28,957 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:28,957 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:31,478 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:31,479 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:02:31,519 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:02:31,520 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N227_0302010139/0
INFO - diffusion.py - 2025-02-26 17:02:33,204 - 结果已输出
INFO - diffusion.py - 2025-02-26 17:02:33,795 - 运行到：
INFO - diffusion.py - 2025-02-26 17:02:33,795 - 15
INFO - diffusion.py - 2025-02-26 17:02:33,795 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 17:02:36,145 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:36,146 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:38,677 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:38,678 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:41,201 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:41,201 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:43,725 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:43,726 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:46,247 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:46,248 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:48,761 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:48,762 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:51,286 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:51,287 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:53,819 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:53,820 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:56,343 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:56,344 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:58,869 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:02:58,870 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:01,395 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:01,395 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:03,921 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:03,921 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:06,451 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:06,452 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:08,980 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:08,980 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:11,503 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:11,504 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:14,029 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:14,029 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:16,559 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:16,560 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:19,090 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:19,091 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:21,605 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:21,606 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:24,133 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:24,133 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:26,666 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:26,667 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:29,188 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:29,188 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:31,718 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:31,719 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:34,244 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:34,245 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:36,769 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:36,770 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:39,296 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:39,296 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:41,822 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:41,824 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:44,349 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:44,350 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:46,872 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:46,873 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:49,393 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:49,393 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:51,916 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:51,917 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:54,447 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:54,447 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:56,975 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:56,975 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:59,503 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:03:59,504 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:02,036 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:02,036 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:04,558 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:04,559 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:07,093 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:07,094 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:09,615 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:09,616 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:12,135 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:12,135 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:14,667 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:14,667 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:17,190 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:17,191 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:19,719 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:19,719 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:22,245 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:22,245 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:24,770 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:24,770 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:27,296 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:27,297 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:29,819 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:29,819 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:32,349 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:32,349 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:34,870 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:34,870 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:37,393 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:37,394 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:39,921 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:39,922 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:42,443 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:42,444 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:44,965 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:44,965 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:47,483 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:47,484 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:50,011 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:50,011 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:52,536 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:52,537 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:55,068 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:55,069 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:57,588 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:04:57,589 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:00,103 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:00,104 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:02,630 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:02,630 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:05,145 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:05,145 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:07,672 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:07,672 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:10,183 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:10,184 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:12,705 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:12,706 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:15,224 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:15,224 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:17,750 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:17,751 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:05:17,791 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:05:17,791 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N228_0302010140/0
INFO - diffusion.py - 2025-02-26 17:05:19,491 - 结果已输出
INFO - diffusion.py - 2025-02-26 17:05:20,094 - 运行到：
INFO - diffusion.py - 2025-02-26 17:05:20,095 - 16
INFO - diffusion.py - 2025-02-26 17:05:20,095 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 17:05:22,438 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:22,439 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:24,969 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:24,969 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:27,491 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:27,491 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:30,008 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:30,009 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:32,523 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:32,523 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:35,045 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:35,046 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:37,577 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:37,578 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:40,107 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:40,107 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:42,631 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:42,632 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:45,155 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:45,155 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:47,682 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:47,683 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:50,214 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:50,214 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:52,732 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:52,733 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:55,254 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:55,254 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:57,761 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:05:57,762 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:00,274 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:00,275 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:02,792 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:02,793 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:05,318 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:05,318 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:07,846 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:07,847 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:10,371 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:10,371 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:12,890 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:12,890 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:15,413 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:15,413 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:17,927 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:17,928 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:20,455 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:20,455 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:22,971 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:22,972 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:25,486 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:25,487 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:28,010 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:28,012 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:30,534 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:30,535 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:33,063 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:33,064 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:35,581 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:35,581 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:38,102 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:38,103 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:40,626 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:40,626 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:43,155 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:43,155 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:45,681 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:45,681 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:48,208 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:48,209 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:50,730 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:50,731 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:53,262 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:53,262 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:55,796 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:55,796 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:58,321 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:06:58,321 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:00,841 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:00,841 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:03,360 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:03,361 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:05,878 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:05,878 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:08,407 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:08,408 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:10,924 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:10,925 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:13,445 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:13,446 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:15,970 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:15,970 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:18,496 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:18,496 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:21,022 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:21,022 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:23,547 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:23,547 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:26,062 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:26,062 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:28,576 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:28,576 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:31,100 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:31,101 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:33,621 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:33,622 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:36,140 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:36,140 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:38,659 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:38,659 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:41,170 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:41,171 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:43,695 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:43,695 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:46,216 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:46,217 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:48,744 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:48,745 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:51,259 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:51,259 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:53,774 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:53,774 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:56,295 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:56,296 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:58,811 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:07:58,811 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:01,334 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:01,335 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:03,850 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:03,850 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:08:03,894 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:08:03,894 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N313_0302010198/0
INFO - diffusion.py - 2025-02-26 17:08:05,589 - 结果已输出
INFO - diffusion.py - 2025-02-26 17:08:06,186 - 运行到：
INFO - diffusion.py - 2025-02-26 17:08:06,186 - 17
INFO - diffusion.py - 2025-02-26 17:08:06,186 - 当前结果将保存到：
INFO - denoising.py - 2025-02-26 17:08:08,529 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:08,530 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:11,051 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:11,051 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:13,578 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:13,578 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:16,100 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:16,101 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:18,620 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:18,621 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:21,145 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:21,145 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:23,670 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:23,670 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:26,199 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:26,200 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:28,721 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:28,721 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:31,246 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:31,246 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:33,775 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:33,776 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:36,305 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:36,305 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:38,833 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:38,833 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:41,355 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:41,356 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:43,880 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:43,880 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:46,403 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:46,403 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:48,939 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:48,939 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:51,471 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:51,472 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:53,989 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:53,989 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:56,511 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:56,512 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:59,035 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:08:59,035 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:01,572 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:01,573 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:04,097 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:04,098 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:06,618 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:06,619 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:09,140 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:09,140 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:11,660 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:11,660 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:14,196 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:14,196 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:16,722 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:16,722 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:19,246 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:19,247 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:21,768 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:21,768 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:24,297 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:24,298 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:26,833 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:26,834 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:29,360 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:29,360 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:31,883 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:31,884 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:34,415 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:34,415 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:36,946 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:36,947 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:39,483 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:39,483 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:42,002 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:42,003 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:44,526 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:44,526 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:47,060 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:47,061 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:49,596 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:49,596 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:52,123 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:52,124 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:54,652 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:54,652 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:57,182 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:57,183 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:59,719 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:09:59,720 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:02,258 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:02,258 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:04,764 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:04,764 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:07,270 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:07,272 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:09,794 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:09,794 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:12,321 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:12,322 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:14,849 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:14,849 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:17,369 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:17,370 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:19,886 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:19,887 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:22,410 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:22,411 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:24,928 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:24,929 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:27,445 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:27,446 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:29,961 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:29,961 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:32,478 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:32,479 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:35,000 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:35,000 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:37,521 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:37,522 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:40,038 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:40,038 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:42,553 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:42,554 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:45,076 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:45,076 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:47,594 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:47,595 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:50,122 - reconstructed_img_data的形状是:torch.Size([1, 192, 240, 192])
INFO - denoising.py - 2025-02-26 17:10:50,122 - xt_next的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:10:50,162 - x的形状是:torch.Size([1, 1, 192, 240, 192])
INFO - diffusion.py - 2025-02-26 17:10:50,162 - /public/home/wangkd2023/Denghw/Datasets_all/Results/T2_norm12/test_datasets/N347_0302010223/0
INFO - diffusion.py - 2025-02-26 17:10:51,850 - 结果已输出
